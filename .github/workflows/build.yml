name: Build

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest

    steps:
      # Cleanup step BEFORE checkout to remove stale .git refs
      - name: Clean workspace before checkout
        run: |
          if (Test-Path $env:GITHUB_WORKSPACE) {
            Remove-Item -Recurse -Force -Path "$env:GITHUB_WORKSPACE\*"
          }

      # Fresh checkout after cleaning everything
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          clean: true
          ref: ${{ github.ref }}

      # Set up JDK (if needed for Sonar)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      # Cache for SonarQube packages
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Cache for SonarQube scanner
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      # Install the scanner if not cached
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory -Force
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      # Begin SonarQube analysis
      - name: Begin SonarQube analysis
        working-directory: TaskManagementSys
        shell: powershell
        run: |
          ..\.sonar\scanner\dotnet-sonarscanner begin `
            /k:"vishnuharidas7_TaskManagementSys_ac59f6e3-b85b-4ba6-9467-f88980d4626f" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" `
            /d:sonar.verbose=true

      # Build the project
      - name: Build project
        working-directory: TaskManagementSys
        shell: powershell
        run: |
          dotnet build TaskManagementSys.sln --no-incremental --verbosity normal

      # End SonarQube analysis
      - name: End SonarQube analysis
        working-directory: TaskManagementSys
        shell: powershell
        run: |
          ..\.sonar\scanner\dotnet-sonarscanner end `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
