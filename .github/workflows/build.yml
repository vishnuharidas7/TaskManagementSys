name: Build

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build and analyze
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: cmd
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Install Coverlet collector
        run: dotnet add <YourTestProjectName>.csproj package coverlet.collector

      - name: Begin SonarQube analysis
        shell: cmd
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin ^
            /k:"vishnuharidas7_TaskManagementSys_ac59f6e3-b85b-4ba6-9467-f88980d4626f" ^
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" ^
            /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" ^
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"

      - name: Build the solution
        run: dotnet build

      - name: Run tests with code coverage
        run: dotnet test --collect:"XPlat Code Coverage"

      - name: Move coverage report (if needed)
        run: |
          for /r %%i in (coverage.opencover.xml) do copy "%%i" coverage.opencover.xml
        shell: cmd

      - name: End SonarQube analysis
        shell: cmd
        run: |
          .\.sonar\scanner\dotnet-sonarscanner end ^
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
