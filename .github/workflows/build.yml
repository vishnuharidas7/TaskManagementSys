name: Build

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          clean: true
          ref: ${{ github.ref }}

      - name: Reset and clean Git repository
        run: |
          git reset --hard
          git clean -fdx

      - name: Delete stale Git lock files
        shell: pwsh
        run: |
          $lockFiles = Get-ChildItem -Path ".git/refs/remotes/origin" -Filter "*.lock" -ErrorAction SilentlyContinue
          if ($lockFiles) {
            $lockFiles | Remove-Item -Force
            Write-Host "Removed stale Git lock files."
          } else {
            Write-Host "No Git lock files found."
          }

      - name: Check Git version
        run: git --version

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Build and analyze
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin `
            /k:"vishnuharidas7_TaskManagementSys_ac59f6e3-b85b-4ba6-9467-f88980d4626f" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"

          dotnet build

          .\.sonar\scanner\dotnet-sonarscanner end `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
